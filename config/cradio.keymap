// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E        &kp R           &kp T        &kp Y       &kp U      &kp I    &kp O          &kp P
&kp A  &kp S  &kp D        &kp F           &kp G        &kp H       &kp J      &kp K    &kp L  &kp SEMICOLON
&kp Z  &kp X  &kp C        &kp V           &kp B        &kp N       &kp M  &kp COMMA  &kp DOT       &kp FSLH
                     &lt 2 SPACE  &lt 3 LEFT_GUI    &kp SPACE  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
   &kp INS  &kp N1  &kp N2  &kp N3   &trans          &kp HOME       &kp PG_DN     &kp PG_UP          &kp END  &kp COLON
   &kp DEL  &kp N4  &kp N5  &kp N6   &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW   &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9   &kp N0            &trans          &trans        &trans           &trans     &trans
                            &trans  &kp ESC            &trans          &trans
            >;
        };

        left_layer {
            bindings = <
    &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4        &kp NUMBER_5    &kp NUMBER_6   &kp NUMBER_7     &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_SHIFT      &kp PLUS  &kp LC(LA(DELETE))          &trans      &kp EQUAL  &kp RIGHT_SHIFT         &kp RIGHT_ALT      &kp RIGHT_CONTROL
 &kp EXCLAMATION   &kp AT_SIGN        &kp HASH    &kp DOLLAR         &kp PERCENT       &kp CARET  &kp AMPERSAND     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
                                                      &trans              &trans          &trans         &trans
            >;
        };

        tri_layer {
            bindings = <
 &sys_reset  &trans  &trans      &trans  &bt BT_SEL 0    &trans  &trans  &trans  &trans   &sys_reset
&bootloader  &trans  &trans      &trans  &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
     &trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans       &trans
                                 &trans        &trans    &trans  &trans
            >;
        };
    };
};
